EX 1: Display even count and odd count in the list
import java.util.*;
public class listpractice {
        public static void main(String[] args) {
        List<Integer>list=new ArrayList<>();
        list.add(13);
        list.add(22);
        list.add(96);
        list.add(23);
        list.add(13);
        list.add(76);
        list.add(22);
        list.add(45);
        list.add(47);
        System.out.println(list);
        System.out.println("reversed list :");
        int evencount=0;
        int oddcount=0;
        for(int i=list.size()-1;i>=0;i--){
            if(list.get(i)%2==0){
                evencount++; 
            }
            else{
                oddcount++;
            }
        }
        System.out.println("evencount : " + evencount);
        System.out.println("oddcount : " + oddcount);
}
}


EX:2 -Display only first even number in the given list
import java.util.*;
public class listpractice {
        public static void main(String[] args) {
        List<Integer>list=new ArrayList<>();
        list.add(13);
        list.add(22);
        list.add(96);
        list.add(23);
        list.add(13);
        list.add(76);
        list.add(22);
        list.add(45);
        list.add(47);
        System.out.println(list);
        int num;
        for(int i=0;i<=list.size();i++){
            if(list.get(i)%2==0){
                 num=list.get(i);
                 
                    System.out.println(num);
                    break;
        }     
}
}
}


3.. Display last odd number in the given list
import java.util.*;
public class listpractice {
        public static void main(String[] args) {
        List<Integer>list=new ArrayList<>();
        list.add(13);
        list.add(22);
        list.add(96);
        list.add(23);
        list.add(13);
        list.add(76);
        list.add(22);
        list.add(45);
        list.add(47);
        System.out.println(list);
        int num;
        for(int i=list.size()-1;i>=0;i--){
            if(list.get(i)%2!=0){
                 num=list.get(i);
                    System.out.println("Odd number from last is : " + num);
                    break;
        }     
}
}
}

EX:3-Find the sum of all elements in the list
import java.util.*;
public class listpractice {
        public static void main(String[] args) {
        List<Integer>list=new ArrayList<>();
        list.add(13);
        list.add(22);
        list.add(96);
        list.add(23);
        list.add(13);
        list.add(76);
        list.add(22);
        list.add(45);
        list.add(47);
        System.out.println(list);
        int sum=0;
        for(int i=list.size()-1;i>=0;i--){
            sum=sum+list.get(i);       
        }     
        System.out.println("Sum of numbers in the list is:  " + sum);
}
}


EX:4-Find the sum of elements in the list which are divisible by 2 but not with 3
import java.util.*;
public class listpractice {
        public static void main(String[] args) {
        List<Integer>list=new ArrayList<>();
        list.add(13);
        list.add(22);
        list.add(96);
        list.add(23);
        list.add(13);
        list.add(76);
        list.add(22);
        list.add(45);
        list.add(47);
        System.out.println(list);
        int sum=0;
        for(int i=list.size()-1;i>=0;i--){
            if(list.get(i)%2==0 && list.get(i)%3!=0){ 
            System.out.println(list.get(i));
        }     
    }
}
}

EX: 5-Find the sum of even numbers and odd number of given list
import java.util.*;
public class listpractice {
        public static void main(String[] args) {
        List<Integer>list=new ArrayList<>();
        list.add(13);
        list.add(22);
        list.add(96);
        list.add(23);
        list.add(13);
        list.add(76);
        list.add(22);
        list.add(45);
        list.add(47);
        System.out.println("List " +list);
        int evensum=0;
        int oddsum=0;
        for(int i=0;i<=list.size()-1;i++){
           if(list.get(i)%2==0){
            System.out.print(list.get(i)+ " ");
            evensum+=list.get(i);
           }
            else if(list.get(i)%2!=0){
            System.out.println(list.get(i));
            oddsum+=list.get(i);   
         }
           }
        
        System.out.println("Even sum is :"  + evensum);
        System.out.println("Odd sum is : " + oddsum);     
    }
}

EX:6-Find the biggest element in the given list
import java.util.*;
public class listpractice {
        public static void main(String[] args) {
        List<Integer>list=new ArrayList<>();
        list.add(13);
        list.add(22);
        list.add(96);
        list.add(23);
        list.add(13);
        list.add(76);
        list.add(22);
        list.add(45);
        list.add(47);
        System.out.println("List " +list);
        int min=list.get(0);
        for(int i=0;i<=list.size()-1;i++){
            if(list.get(i)<min){
                min=list.get(i);
            }
        }
        System.out.println(min);
}
}

EX:7-Display employees suin for each loop
import java.util.*;
public class Emplo {
    public static void main(String[] args) {
        int ids[]={1,2,3,4,5};
        String[]names={"anu","renu","sai","deepa","lok"};
        int []salary={200000,49999,78900,56889,34577};
        int depName[]={10,20,30,40,50};
        int age[]={21,22,43,56,32};
        List<Employeee>employes=new ArrayList<>();
        for(int i=0;i<ids.length;i++){
       Employeee e=new Employeee(ids[i],names[i],salary[i],depName[i],age[i]);
       employes.add(e);
        }
        for (Employeee e : employes) {
            System.out.println("ID: " + e.id + ", Name: " + e.name + ", Salary: " + e.salary + ", Dept: " + e.deptNum + ", Age: " + e.age);
        }
        
        
}
}
class Employeee{
    int id;
    String name;
    int salary;
    int deptNum;
    int age;
    public Employeee(int id, String name, int salary, int deptNum, int age) {
        this.id = id;
        this.name = name;
        this.salary = salary;
        this.deptNum = deptNum;
        this.age = age;
    }
}

EX:8:display using iterator
import java.util.*;
public class Emplo {
    public static void main(String[] args) {
        int ids[]={1,2,3,4,5};
        String[]names={"anu","renu","sai","deepa","lok"};
        int []salary={200000,49999,78900,56889,34577};
        int depName[]={10,20,30,40,50};
        int age[]={21,22,43,56,32};
        List<Employeee>employes=new ArrayList<>();
        for(int i=ids.length-1;i>=0;i--){
       Employeee e=new Employeee(ids[i],names[i],salary[i],depName[i],age[i]);
       employes.add(e);
        }
        Iterator itr=employes.iterator();
        while(itr.hasNext()){
            System.out.println(itr.next());
        }     
}
}
class Employeee{
    int id;
    String name;
    int salary;
    int deptNum;
    int age;
    public Employeee(int id, String name, int salary, int deptNum, int age) {
        this.id = id;
        this.name = name;
        this.salary = salary;
        this.deptNum = deptNum;
        this.age = age;
    }
    public String toString() {
        return "ID: " + id + ", Name: " + name + ", Salary: " + salary + ", Dept: " + deptNum + ", Age: " + age;
    }
}

EX:9-to dispaly employee details where id=1
for (Employeee e : employes) {
            if(e.id==1){
                System.out.println(e);
                break;
}
}

Ex:10-A function to find the intersection of two arrays.Each element in thye rrsult must be unique
import java.util.*;
public class rev {
    public static void main(String[] args) {
        int[]arr1={1,2,2,1,3,9,0,10};
        int[]arr2={2,2,3,9,10};
        int []res=intersection(arr1, arr2);
        System.out.println(res);
        for(int num:res){
            System.out.print(num + " ");
        }
    }
    public static int[] intersection(int arr1[],int arr2[]){
        Set<Integer>set1=new HashSet<>();
        Set<Integer>set2=new HashSet<>();

        for(int num:arr1){
            set1.add(num);
        }
        for(int num:arr2){
            if(set1.contains(num)){
                set2.add(num);
            }
        }
        int []res=new int[set2.size()];
        int i=0;
        for(int num:set2){
            res[i++]=num;
        }
        return res;
    }
}
Excution:Loop through set2 which contains {4, 5, 7}.
1.For the first iteration:
num is 4.
res[i++] = num; assigns 4 to res[0].
i is incremented to 1.
2.For the second iteration:
num is 5.
res[i++] = num; assigns 5 to res[1].
i is incremented to 2.
3.For the third iteration:
num is 7.
res[i++] = num; assigns 7 to res[2].
i is incremented to 3.
res now contains [4, 5, 7].

EX:11-Counting each element frequencies in Map
import java.util.*;
public class freqcount {
    public static void main(String[] args) {
        int arr[]={2,3,1,3,4,5,4,5,2,2,4};
        Map<Integer,Integer>freqmap=new HashMap<>();
        for(int num:arr){
            if(freqmap.containsKey(num)){
                freqmap.put(num,freqmap.get(num)+1);
            }
            else{
                freqmap.put(num,1);
            }
        }//printing each frequencies
        freqmap.forEach((key, value) -> {
            System.out.println("Element: " + key + ", Frequency: " + value);
        });
}   
}
Explanation:
1.First Iteration (num = 3):
frequencyMap is empty. 3 is not in frequencyMap.
put(3, 1) adds 3 with a count of 1.
frequencyMap becomes {3=1}.
2.Second Iteration (num = 1):
1 is not in frequencyMap.
put(1, 1) adds 1 with a count of 1.
frequencyMap becomes {3=1, 1=1}.
3.Sixth Iteration (num = 7):
7 is already in frequencyMap with a count of 1.
put(7, 2) updates the count of 7 to 2.
frequencyMap becomes {3=1, 1=1, 7=2}.













